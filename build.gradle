plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'com.github.jenya705'
version = '1.0'

shadowJar {
    if (project.hasProperty("dir")) {
        destinationDir(new File((String) project.getProperties().get("dir")))
    }

    relocate 'com.zaxxer', 'com.github.jenya705.cubictracker'
    relocate 'org.mariadb.jdbc', 'com.github.jenya705.cubictracker.mariadb'
    relocate 'ch.jalu', 'com.github.jenya705.cubictracker'
    relocate 'de.tr7zw.changeme.nbtapi', 'com.github.jenya705.cubictracker.nbtapi'

}

repositories {
    mavenCentral()
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://repo.codemc.org/repository/maven-public/' }
}

dependencies {
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'ch.jalu:configme:1.3.0'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.9.2'
    compileOnly 'io.papermc.paper:paper-api:1.18.1-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:23.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
